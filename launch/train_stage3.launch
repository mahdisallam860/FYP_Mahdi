<launch>
    <!-- Set parameters for TurtleBot3 -->
    <arg name="model" default="waffle_pi"/>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    
    <param name="model" value="$(arg model)"/>
    
    <!-- Set PYTHONPATH to include the package src directory -->
    <env name="PYTHONPATH" value="$(find dqn3)/src:$(env PYTHONPATH)" />
    
    <!-- Launch Gazebo with the stage3 world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find dqn3)/worlds/stage3.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- Spawn TurtleBot3 -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />


    <!-- Launch Dynamic Obstacles Manager -->
    <node pkg="dqn3" type="obstacle_manager.py" name="obstacle_manager" output="screen">
        <param name="rate" value="5"/>
        <param name="/dynamic_obstacle1/linear_speed" value="0.2"/>
        <param name="/dynamic_obstacle1/angular_speed" value="0.2"/>
        <param name="/dynamic_obstacle2/linear_speed" value="0.3"/>
        <param name="/dynamic_obstacle3/linear_speed" value="0.2"/>
        <param name="/dynamic_obstacle3/angular_speed" value="0.6"/>
        <param name="/dynamic_obstacle3/zigzag_duration" value="3.0"/>
    </node>

    <!-- Launch Training Script -->
    <node pkg="dqn3" type="train_stage33.py" name="train_stage3" output="screen">
        <param name="agent_type" value="dqn"/> <!-- Change to "ddqn" if using DDQN -->
        <param name="checkpoint" value=""/>
    </node>
</launch>
